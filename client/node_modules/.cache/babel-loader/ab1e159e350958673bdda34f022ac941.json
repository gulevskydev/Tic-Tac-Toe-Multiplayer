{"ast":null,"code":"var _jsxFileName = \"/home/dima/Desktop/Projects/tic-tac-toe/client/src/components/GamePage/GamePage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./GamePage.scss\";\nimport BoardRender from \"../BoardRender/BoardRender\"; // query string\n\nimport qs from \"qs\"; // socket.io client\n\nconst io = require(\"socket.io-client\");\n\nconst socket = io(\"http://localhost:5000\");\nexport default function GamePage() {\n  const [waiting, setWaiting] = useState(true);\n  const [roomID, setRoomID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [errorJoin, setErrorJoin] = useState(false);\n  const [playerID, setPlayerID] = useState(\"\");\n  const [sign, setSign] = useState(\"\");\n  const [board, setBoard] = useState([]);\n  const [turn, setTurn] = useState(null);\n  useEffect(() => {\n    //get current room and name\n    const {\n      room,\n      name\n    } = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true\n    }); //handle error join\n\n    if (!name || !room) {\n      setErrorJoin(true);\n    }\n\n    setRoomID(room);\n    setName(name);\n  }, []);\n  useEffect(() => {\n    if (roomID) {\n      socket.emit(\"newJoinToTheRoom\", {\n        roomID,\n        name\n      });\n      console.log(roomID);\n      console.log(name);\n    }\n  }, [roomID]);\n  socket.on(\"initSignAndId\", ({\n    id,\n    sign\n  }) => {\n    setSign(sign);\n    setPlayerID(id);\n  });\n  socket.on(\"startTheGame\", ({\n    turn,\n    board,\n    wating\n  }) => {\n    const isCurrentTurn = turn === sign;\n    setTurn(isCurrentTurn);\n    setBoard(board);\n    setWaiting(waiting);\n  });\n  useEffect(() => {\n    console.log(\"sign\", sign);\n    console.log(\"playerID\", playerID);\n    console.log(\"board\", board);\n    console.log(\"turn\", turn);\n  }, [sign]); // Render\n\n  if (errorJoin) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: `/`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, `Hello ${name}!`), waiting ? /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, `Waiting another player... Copy game ID => ${roomID}`) : null);\n  }\n}","map":{"version":3,"sources":["/home/dima/Desktop/Projects/tic-tac-toe/client/src/components/GamePage/GamePage.js"],"names":["React","useEffect","useState","Redirect","BoardRender","qs","io","require","socket","GamePage","waiting","setWaiting","roomID","setRoomID","name","setName","errorJoin","setErrorJoin","playerID","setPlayerID","sign","setSign","board","setBoard","turn","setTurn","room","parse","window","location","search","ignoreQueryPrefix","emit","console","log","on","id","wating","isCurrentTurn"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./GamePage.scss\";\nimport BoardRender from \"../BoardRender/BoardRender\";\n\n// query string\nimport qs from \"qs\";\n// socket.io client\nconst io = require(\"socket.io-client\");\nconst socket = io(\"http://localhost:5000\");\n\nexport default function GamePage() {\n  const [waiting, setWaiting] = useState(true);\n  const [roomID, setRoomID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [errorJoin, setErrorJoin] = useState(false);\n  const [playerID, setPlayerID] = useState(\"\");\n  const [sign, setSign] = useState(\"\");\n  const [board, setBoard] = useState([]);\n  const [turn, setTurn] = useState(null);\n\n  useEffect(() => {\n    //get current room and name\n    const { room, name } = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n    });\n    //handle error join\n    if (!name || !room) {\n      setErrorJoin(true);\n    }\n    setRoomID(room);\n    setName(name);\n  }, []);\n\n  useEffect(() => {\n    if (roomID) {\n      socket.emit(\"newJoinToTheRoom\", { roomID, name });\n      console.log(roomID);\n      console.log(name);\n    }\n  }, [roomID]);\n\n  socket.on(\"initSignAndId\", ({ id, sign }) => {\n    setSign(sign);\n    setPlayerID(id);\n  });\n\n  socket.on(\"startTheGame\", ({ turn, board, wating }) => {\n    const isCurrentTurn = turn === sign;\n    setTurn(isCurrentTurn);\n    setBoard(board);\n    setWaiting(waiting);\n  });\n\n  useEffect(() => {\n    console.log(\"sign\", sign);\n    console.log(\"playerID\", playerID);\n    console.log(\"board\", board);\n    console.log(\"turn\", turn);\n  }, [sign]);\n\n  // Render\n\n  if (errorJoin) {\n    return <Redirect to={`/`} />;\n  } else {\n    return (\n      <div className=\"container-board\">\n        <h2>{`Hello ${name}!`}</h2>\n        {waiting ? (\n          <h3>{`Waiting another player... Copy game ID => ${roomID}`}</h3>\n        ) : null}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}