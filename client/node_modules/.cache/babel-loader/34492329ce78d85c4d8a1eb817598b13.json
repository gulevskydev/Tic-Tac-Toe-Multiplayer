{"ast":null,"code":"var _jsxFileName = \"/home/dima/Desktop/Projects/tic-tac-toe/client/src/components/GamePage/GamePage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\"; // query string\n\nimport qs from \"qs\"; // socket.io client\n\nconst io = require(\"socket.io-client\");\n\nconst socket = io(\"http://localhost:5000\");\nexport default function GamePage() {\n  // state\n  const [room, setRoom] = useState(\"\");\n  const [errorJoinedRoom, setErrorJoinedRoom] = useState(false);\n  const [waitSecondPlayer, setWaitSecondPlayer] = useState(false);\n  const [socketID, setSocketID] = useState(null);\n  const [mark, setMark] = useState(null);\n  const [opponent, setOpponent] = useState([]);\n  const [end, setEnd] = useState(false);\n  const [gameState, setGameState] = useState([]);\n  useEffect(() => {\n    console.log(\"NEW\"); //get current room and name\n\n    const {\n      room,\n      name\n    } = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true\n    });\n    setRoom(room);\n    socket.emit(\"joinedNewRoom\", {\n      room,\n      name\n    }); // asigning id and mark\n\n    io.on(\"assignID\", ({\n      id,\n      mark\n    }) => {\n      setSocketID(id);\n      setMark(mark);\n    }); // creating game (board, players ...)\n\n    io.on(\"startTheGame\", ({\n      stateOfTheGame,\n      players\n    }) => {\n      setWaitSecondPlayer(false);\n      startGame(stateOfTheGame, players);\n    });\n  }, []);\n\n  const startGame = (state, players) => {\n    const player2 = players.filter(el => el.id !== socketID)[0][1];\n    setOpponent([player2, 0]);\n    setGameState(state);\n  }; // Render\n\n\n  if (errorJoinedRoom) return /*#__PURE__*/React.createElement(Redirect, {\n    to: `/`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }\n  });else return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Game Page\");\n}","map":{"version":3,"sources":["/home/dima/Desktop/Projects/tic-tac-toe/client/src/components/GamePage/GamePage.js"],"names":["React","useEffect","useState","Redirect","qs","io","require","socket","GamePage","room","setRoom","errorJoinedRoom","setErrorJoinedRoom","waitSecondPlayer","setWaitSecondPlayer","socketID","setSocketID","mark","setMark","opponent","setOpponent","end","setEnd","gameState","setGameState","console","log","name","parse","window","location","search","ignoreQueryPrefix","emit","on","id","stateOfTheGame","players","startGame","state","player2","filter","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB,C,CAEA;;AACA,OAAOC,EAAP,MAAe,IAAf,C,CACA;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAD,CAAjB;AAEA,eAAe,SAASG,QAAT,GAAoB;AACjC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,GAAD,EAAMC,MAAN,IAAgBpB,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EADc,CAEd;;AACA,UAAM;AAAEjB,MAAAA,IAAF;AAAQkB,MAAAA;AAAR,QAAiBvB,EAAE,CAACwB,KAAH,CAASC,MAAM,CAACC,QAAP,CAAgBC,MAAzB,EAAiC;AACtDC,MAAAA,iBAAiB,EAAE;AADmC,KAAjC,CAAvB;AAGAtB,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAF,IAAAA,MAAM,CAAC0B,IAAP,CAAY,eAAZ,EAA6B;AAAExB,MAAAA,IAAF;AAAQkB,MAAAA;AAAR,KAA7B,EAPc,CASd;;AACAtB,IAAAA,EAAE,CAAC6B,EAAH,CAAM,UAAN,EAAkB,CAAC;AAAEC,MAAAA,EAAF;AAAMlB,MAAAA;AAAN,KAAD,KAAkB;AAClCD,MAAAA,WAAW,CAACmB,EAAD,CAAX;AACAjB,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAHD,EAVc,CAed;;AACAZ,IAAAA,EAAE,CAAC6B,EAAH,CAAM,cAAN,EAAsB,CAAC;AAAEE,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,KAAD,KAAiC;AACrDvB,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAwB,MAAAA,SAAS,CAACF,cAAD,EAAiBC,OAAjB,CAAT;AACD,KAHD;AAID,GApBQ,EAoBN,EApBM,CAAT;;AAsBA,QAAMC,SAAS,GAAG,CAACC,KAAD,EAAQF,OAAR,KAAoB;AACpC,UAAMG,OAAO,GAAGH,OAAO,CAACI,MAAR,CAAgBC,EAAD,IAAQA,EAAE,CAACP,EAAH,KAAUpB,QAAjC,EAA2C,CAA3C,EAA8C,CAA9C,CAAhB;AACAK,IAAAA,WAAW,CAAC,CAACoB,OAAD,EAAU,CAAV,CAAD,CAAX;AACAhB,IAAAA,YAAY,CAACe,KAAD,CAAZ;AACD,GAJD,CAjCiC,CAuCjC;;;AACA,MAAI5B,eAAJ,EAAqB,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAArB,KACK,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACN","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// query string\nimport qs from \"qs\";\n// socket.io client\nconst io = require(\"socket.io-client\");\nconst socket = io(\"http://localhost:5000\");\n\nexport default function GamePage() {\n  // state\n  const [room, setRoom] = useState(\"\");\n  const [errorJoinedRoom, setErrorJoinedRoom] = useState(false);\n  const [waitSecondPlayer, setWaitSecondPlayer] = useState(false);\n  const [socketID, setSocketID] = useState(null);\n  const [mark, setMark] = useState(null);\n  const [opponent, setOpponent] = useState([]);\n  const [end, setEnd] = useState(false);\n  const [gameState, setGameState] = useState([]);\n\n  useEffect(() => {\n    console.log(\"NEW\");\n    //get current room and name\n    const { room, name } = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n    });\n    setRoom(room);\n    socket.emit(\"joinedNewRoom\", { room, name });\n\n    // asigning id and mark\n    io.on(\"assignID\", ({ id, mark }) => {\n      setSocketID(id);\n      setMark(mark);\n    });\n\n    // creating game (board, players ...)\n    io.on(\"startTheGame\", ({ stateOfTheGame, players }) => {\n      setWaitSecondPlayer(false);\n      startGame(stateOfTheGame, players);\n    });\n  }, []);\n\n  const startGame = (state, players) => {\n    const player2 = players.filter((el) => el.id !== socketID)[0][1];\n    setOpponent([player2, 0]);\n    setGameState(state);\n  };\n\n  // Render\n  if (errorJoinedRoom) return <Redirect to={`/`} />;\n  else return <div>Game Page</div>;\n}\n"]},"metadata":{},"sourceType":"module"}