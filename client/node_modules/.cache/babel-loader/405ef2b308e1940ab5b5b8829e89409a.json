{"ast":null,"code":"var _jsxFileName = \"/home/dima/Desktop/Projects/tic-tac-toe/client/src/components/GamePage/GamePage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./GamePage.scss\";\nimport BoardRender from \"../BoardRender/BoardRender\";\nimport \"./fontawesome/css/font-awesome.css\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\"; // query string\n\nimport qs from \"qs\"; // socket.io client\n\nconst io = require(\"socket.io-client\");\n\nexport default function GamePage() {\n  // main state\n  const [waiting, setWaiting] = useState(true);\n  const [roomID, setRoomID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [errorJoin, setErrorJoin] = useState(false);\n  const [playerID, setPlayerID] = useState(\"\");\n  const [sign, setSign] = useState(\"\");\n  const [board, setBoard] = useState([]);\n  const [turn, setTurn] = useState(null);\n  const [enemy, setEnemy] = useState([]);\n  const [endGame, setEndGame] = useState(false);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [enemyScore, setEnemytScore] = useState(0);\n  useEffect(() => {\n    const socket = io(\"http://localhost:5000\"); //get current room and name\n\n    const {\n      room,\n      name\n    } = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true\n    }); //handle error join\n\n    if (!name || !room) {\n      setErrorJoin(true);\n    }\n\n    setRoomID(room);\n    setName(name);\n    socket.on(\"initSignAndId\", ({\n      id,\n      sign\n    }) => {\n      setSign(sign);\n      setPlayerID(id);\n    });\n  }, []); // when two players in the room start the game\n\n  socket.on(\"startTheGame\", ({\n    turn,\n    board,\n    waiting,\n    players\n  }) => {\n    const isCurrentTurn = turn === sign;\n    const enemyPlayer = players.filter(player => !player.includes(playerID));\n    setBoard(board);\n    setTurn(isCurrentTurn);\n    setWaiting(waiting);\n    setEnemy(enemyPlayer);\n  });\n  useEffect(() => {\n    if (roomID) {\n      console.log(\"ROOMID\");\n      socket.emit(\"newJoinToTheRoom\", {\n        roomID,\n        name\n      });\n    }\n  }, [roomID]); // update data from server\n\n  socket.on(\"updateBoard\", ({\n    board,\n    currentTurn,\n    signWinner\n  }) => {\n    const isCurrentTurn = currentTurn === sign;\n\n    if (signWinner) {\n      setEndGame(true);\n      setTurn(false);\n    } else {\n      setTurn(isCurrentTurn);\n    }\n\n    setBoard(board);\n  });\n\n  const handleClick = (e, i) => {\n    if (turn) {\n      console.log(\"click\");\n      socket.emit(\"playerMove\", {\n        i,\n        sign,\n        roomID\n      });\n    } else {\n      // createNotification(\"error\");\n      NotificationManager.error(\"\", \"Wait for the opponents move!\", 2000);\n    }\n  };\n\n  socket.on(\"winner\", ({\n    board,\n    id\n  }) => {\n    console.log(\"ID*****\", playerID, id);\n\n    if (id === playerID) {\n      const score = currentScore + 1;\n      setCurrentScore(score);\n      console.log(\"CORRECT WINNER\");\n    } else {\n      const score = enemyScore + 1;\n      setEnemytScore(score);\n      console.log(\"ENEMY WINNER\");\n    }\n  });\n\n  const createUniqueRoomID = () => Date.now().toString(36) + Math.random().toString(36).substr(2);\n\n  useEffect(() => {}, [board]); // Render\n\n  const classNameOfTheCell = (i, el) => {\n    const notSelected = i === 0 ? \"cell bottom right\" : i === 1 ? \"cell bottom\" : i === 2 ? \"cell bottom left\" : i === 3 ? \"cell bottom right\" : i === 4 ? \"cell bottom\" : i === 5 ? \"cell bottom left\" : i === 6 ? \"cell right\" : i === 7 ? \"cell right\" : \"cell\";\n    return `${notSelected} `;\n  };\n\n  const renderGameStage = () => {\n    if (endGame) {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 14\n        }\n      }, \"Game Over!\");\n    } else {\n      return turn ? \"Your turn\" : \"Wait for the opponent's move\";\n    }\n  };\n\n  if (errorJoin) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: `/`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 12\n      }\n    });\n  } else if (waiting) {\n    return /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 12\n      }\n    }, `Waiting another player... Copy game ID => ${roomID}`);\n  } else {\n    console.log(\"RENDER*****\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-\\u0441ontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"turn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, renderGameStage()), board.map((el, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: createUniqueRoomID(),\n        className: classNameOfTheCell(i, el),\n        onClick: e => handleClick(e, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"span-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: el === \"X\" ? \"fa fa-times\" : el === \"O\" ? \"fa fa-circle-o\" : \"\",\n        \"aria-hidden\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }\n      })));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, \"Score board\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"current-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"currentName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, \" You\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"score-player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, currentScore)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"enemy-score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"opponentName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }\n    }, \" Oponent \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"score-player\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, enemyScore))))), /*#__PURE__*/React.createElement(NotificationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/home/dima/Desktop/Projects/tic-tac-toe/client/src/components/GamePage/GamePage.js"],"names":["React","useEffect","useState","Redirect","BoardRender","NotificationContainer","NotificationManager","qs","io","require","GamePage","waiting","setWaiting","roomID","setRoomID","name","setName","errorJoin","setErrorJoin","playerID","setPlayerID","sign","setSign","board","setBoard","turn","setTurn","enemy","setEnemy","endGame","setEndGame","currentScore","setCurrentScore","enemyScore","setEnemytScore","socket","room","parse","window","location","search","ignoreQueryPrefix","on","id","players","isCurrentTurn","enemyPlayer","filter","player","includes","console","log","emit","currentTurn","signWinner","handleClick","e","i","error","score","createUniqueRoomID","Date","now","toString","Math","random","substr","classNameOfTheCell","el","notSelected","renderGameStage","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./GamePage.scss\";\nimport BoardRender from \"../BoardRender/BoardRender\";\nimport \"./fontawesome/css/font-awesome.css\";\n\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\n\n// query string\nimport qs from \"qs\";\n// socket.io client\nconst io = require(\"socket.io-client\");\n\nexport default function GamePage() {\n  // main state\n  const [waiting, setWaiting] = useState(true);\n  const [roomID, setRoomID] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [errorJoin, setErrorJoin] = useState(false);\n  const [playerID, setPlayerID] = useState(\"\");\n  const [sign, setSign] = useState(\"\");\n  const [board, setBoard] = useState([]);\n  const [turn, setTurn] = useState(null);\n  const [enemy, setEnemy] = useState([]);\n  const [endGame, setEndGame] = useState(false);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [enemyScore, setEnemytScore] = useState(0);\n\n  useEffect(() => {\n    const socket = io(\"http://localhost:5000\");\n    //get current room and name\n    const { room, name } = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n    });\n    //handle error join\n    if (!name || !room) {\n      setErrorJoin(true);\n    }\n    setRoomID(room);\n    setName(name);\n    socket.on(\"initSignAndId\", ({ id, sign }) => {\n      setSign(sign);\n      setPlayerID(id);\n    });\n  }, []);\n\n  // when two players in the room start the game\n  socket.on(\"startTheGame\", ({ turn, board, waiting, players }) => {\n    const isCurrentTurn = turn === sign;\n    const enemyPlayer = players.filter((player) => !player.includes(playerID));\n    setBoard(board);\n    setTurn(isCurrentTurn);\n    setWaiting(waiting);\n    setEnemy(enemyPlayer);\n  });\n\n  useEffect(() => {\n    if (roomID) {\n      console.log(\"ROOMID\");\n      socket.emit(\"newJoinToTheRoom\", { roomID, name });\n    }\n  }, [roomID]);\n\n  // update data from server\n  socket.on(\"updateBoard\", ({ board, currentTurn, signWinner }) => {\n    const isCurrentTurn = currentTurn === sign;\n    if (signWinner) {\n      setEndGame(true);\n      setTurn(false);\n    } else {\n      setTurn(isCurrentTurn);\n    }\n    setBoard(board);\n  });\n\n  const handleClick = (e, i) => {\n    if (turn) {\n      console.log(\"click\");\n      socket.emit(\"playerMove\", { i, sign, roomID });\n    } else {\n      // createNotification(\"error\");\n      NotificationManager.error(\"\", \"Wait for the opponents move!\", 2000);\n    }\n  };\n\n  socket.on(\"winner\", ({ board, id }) => {\n    console.log(\"ID*****\", playerID, id);\n    if (id === playerID) {\n      const score = currentScore + 1;\n      setCurrentScore(score);\n      console.log(\"CORRECT WINNER\");\n    } else {\n      const score = enemyScore + 1;\n      setEnemytScore(score);\n      console.log(\"ENEMY WINNER\");\n    }\n  });\n\n  const createUniqueRoomID = () =>\n    Date.now().toString(36) + Math.random().toString(36).substr(2);\n\n  useEffect(() => {}, [board]);\n\n  // Render\n\n  const classNameOfTheCell = (i, el) => {\n    const notSelected =\n      i === 0\n        ? \"cell bottom right\"\n        : i === 1\n        ? \"cell bottom\"\n        : i === 2\n        ? \"cell bottom left\"\n        : i === 3\n        ? \"cell bottom right\"\n        : i === 4\n        ? \"cell bottom\"\n        : i === 5\n        ? \"cell bottom left\"\n        : i === 6\n        ? \"cell right\"\n        : i === 7\n        ? \"cell right\"\n        : \"cell\";\n\n    return `${notSelected} `;\n  };\n\n  const renderGameStage = () => {\n    if (endGame) {\n      return <h3>Game Over!</h3>;\n    } else {\n      return turn ? \"Your turn\" : \"Wait for the opponent's move\";\n    }\n  };\n\n  if (errorJoin) {\n    return <Redirect to={`/`} />;\n  } else if (waiting) {\n    return <h3>{`Waiting another player... Copy game ID => ${roomID}`}</h3>;\n  } else {\n    console.log(\"RENDER*****\");\n    return (\n      <div className=\"game-container\">\n        <div>\n          <div className=\"board-сontainer\">\n            <div className=\"turn\">{renderGameStage()}</div>\n            {board.map((el, i) => {\n              return (\n                <div\n                  key={createUniqueRoomID()}\n                  className={classNameOfTheCell(i, el)}\n                  onClick={(e) => handleClick(e, i)}>\n                  <div className=\"span-container\">\n                    <span\n                      className={\n                        el === \"X\"\n                          ? \"fa fa-times\"\n                          : el === \"O\"\n                          ? \"fa fa-circle-o\"\n                          : \"\"\n                      }\n                      aria-hidden=\"true\"></span>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"board-score\">Score board</div>\n            <div className=\"container-score\">\n              <div className=\"current-score\">\n                <h3 className=\"currentName\"> You</h3>\n                <span className=\"score-player\">{currentScore}</span>\n              </div>\n              <div className=\"enemy-score\">\n                <h3 className=\"opponentName\"> Oponent </h3>\n                <span className=\"score-player\">{enemyScore}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        <NotificationContainer />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}