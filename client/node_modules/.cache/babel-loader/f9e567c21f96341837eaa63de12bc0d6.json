{"ast":null,"code":"var _jsxFileName = \"/home/dima/Desktop/Projects/tic-tac-toe/client/src/components/GamePage/GamePage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./GamePage.scss\"; // query string\n\nimport qs from \"qs\"; // socket.io client\n\nconst io = require(\"socket.io-client\");\n\nconst socket = io(\"http://localhost:5000\");\nexport default function GamePage() {\n  // state\n  const [room, setRoom] = useState(\"\");\n  const [errorJoinedRoom, setErrorJoinedRoom] = useState(false);\n  const [waitSecondPlayer, setWaitSecondPlayer] = useState(false);\n  const [socketID, setSocketID] = useState(null);\n  const [mark, setMark] = useState(\"O\");\n  const [opponent, setOpponent] = useState([]);\n  const [end, setEnd] = useState(false);\n  const [gameState, setGameState] = useState([]);\n  const [board, setBoard] = useState(new Array(9).fill(null));\n  useEffect(() => {\n    console.log(\"NEW\"); //get current room and name\n\n    const {\n      room,\n      name\n    } = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true\n    });\n    setRoom(room);\n    socket.emit(\"joinedNewRoom\", {\n      room,\n      name\n    }); // asigning id and mark\n\n    socket.on(\"assignID\", ({\n      id,\n      playerMark\n    }) => {\n      console.log(id, playerMark);\n      setMark(playerMark);\n      setSocketID(id);\n    }); // creating game (board, players ...)\n\n    socket.on(\"startTheGame\", ({\n      stateOfTheGame,\n      players\n    }) => {\n      setWaitSecondPlayer(false);\n      startGame(stateOfTheGame, players);\n    });\n    socket.on(\"updateBoard\", ({\n      stateOfTheGame,\n      turn\n    }) => handleUpdateGame(stateOfTheGame, turn));\n  }, []);\n\n  const handleUpdateGame = (state, turn) => {\n    setBoard(state);\n    setTurn(turn);\n  }; // assigning board state and players data\n\n\n  const startGame = (state, players) => {\n    const player2 = players.filter(el => el.id !== socketID)[0][1];\n    setOpponent([player2, 0]);\n    setBoard(state);\n  };\n\n  const handleClick = id => {\n    console.log(mark);\n    socket.emit(\"move\", {\n      room,\n      mark,\n      id\n    });\n  }; // Render\n\n\n  if (errorJoinedRoom) return /*#__PURE__*/React.createElement(Redirect, {\n    to: `/`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 31\n    }\n  });else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, Array(9).fill(null).map((el, id) => {\n      return /*#__PURE__*/React.createElement(\"button\", {\n        key: id,\n        className: \"cell\",\n        onClick: () => handleClick(id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      });\n    })));\n  }\n}","map":{"version":3,"sources":["/home/dima/Desktop/Projects/tic-tac-toe/client/src/components/GamePage/GamePage.js"],"names":["React","useEffect","useState","Redirect","qs","io","require","socket","GamePage","room","setRoom","errorJoinedRoom","setErrorJoinedRoom","waitSecondPlayer","setWaitSecondPlayer","socketID","setSocketID","mark","setMark","opponent","setOpponent","end","setEnd","gameState","setGameState","board","setBoard","Array","fill","console","log","name","parse","window","location","search","ignoreQueryPrefix","emit","on","id","playerMark","stateOfTheGame","players","startGame","turn","handleUpdateGame","state","setTurn","player2","filter","el","handleClick","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,iBAAP,C,CAEA;;AACA,OAAOC,EAAP,MAAe,IAAf,C,CACA;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,kBAAD,CAAlB;;AACA,MAAMC,MAAM,GAAGF,EAAE,CAAC,uBAAD,CAAjB;AAEA,eAAe,SAASG,QAAT,GAAoB;AACjC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACW,gBAAD,EAAmBC,mBAAnB,IAA0CZ,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,GAAD,EAAMC,MAAN,IAAgBpB,QAAQ,CAAC,KAAD,CAA9B;AACA,QAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4BtB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACuB,KAAD,EAAQC,QAAR,IAAoBxB,QAAQ,CAAC,IAAIyB,KAAJ,CAAU,CAAV,EAAaC,IAAb,CAAkB,IAAlB,CAAD,CAAlC;AAEA3B,EAAAA,SAAS,CAAC,MAAM;AACd4B,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EADc,CAEd;;AACA,UAAM;AAAErB,MAAAA,IAAF;AAAQsB,MAAAA;AAAR,QAAiB3B,EAAE,CAAC4B,KAAH,CAASC,MAAM,CAACC,QAAP,CAAgBC,MAAzB,EAAiC;AACtDC,MAAAA,iBAAiB,EAAE;AADmC,KAAjC,CAAvB;AAGA1B,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAF,IAAAA,MAAM,CAAC8B,IAAP,CAAY,eAAZ,EAA6B;AAAE5B,MAAAA,IAAF;AAAQsB,MAAAA;AAAR,KAA7B,EAPc,CASd;;AACAxB,IAAAA,MAAM,CAAC+B,EAAP,CAAU,UAAV,EAAsB,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,KAAD,KAAwB;AAC5CX,MAAAA,OAAO,CAACC,GAAR,CAAYS,EAAZ,EAAgBC,UAAhB;AACAtB,MAAAA,OAAO,CAACsB,UAAD,CAAP;AACAxB,MAAAA,WAAW,CAACuB,EAAD,CAAX;AACD,KAJD,EAVc,CAgBd;;AACAhC,IAAAA,MAAM,CAAC+B,EAAP,CAAU,cAAV,EAA0B,CAAC;AAAEG,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,KAAD,KAAiC;AACzD5B,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACA6B,MAAAA,SAAS,CAACF,cAAD,EAAiBC,OAAjB,CAAT;AACD,KAHD;AAKAnC,IAAAA,MAAM,CAAC+B,EAAP,CAAU,aAAV,EAAyB,CAAC;AAAEG,MAAAA,cAAF;AAAkBG,MAAAA;AAAlB,KAAD,KACvBC,gBAAgB,CAACJ,cAAD,EAAiBG,IAAjB,CADlB;AAGD,GAzBQ,EAyBN,EAzBM,CAAT;;AA2BA,QAAMC,gBAAgB,GAAG,CAACC,KAAD,EAAQF,IAAR,KAAiB;AACxClB,IAAAA,QAAQ,CAACoB,KAAD,CAAR;AACAC,IAAAA,OAAO,CAACH,IAAD,CAAP;AACD,GAHD,CAvCiC,CA4CjC;;;AACA,QAAMD,SAAS,GAAG,CAACG,KAAD,EAAQJ,OAAR,KAAoB;AACpC,UAAMM,OAAO,GAAGN,OAAO,CAACO,MAAR,CAAgBC,EAAD,IAAQA,EAAE,CAACX,EAAH,KAAUxB,QAAjC,EAA2C,CAA3C,EAA8C,CAA9C,CAAhB;AACAK,IAAAA,WAAW,CAAC,CAAC4B,OAAD,EAAU,CAAV,CAAD,CAAX;AACAtB,IAAAA,QAAQ,CAACoB,KAAD,CAAR;AACD,GAJD;;AAMA,QAAMK,WAAW,GAAIZ,EAAD,IAAQ;AAC1BV,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAV,IAAAA,MAAM,CAAC8B,IAAP,CAAY,MAAZ,EAAoB;AAAE5B,MAAAA,IAAF;AAAQQ,MAAAA,IAAR;AAAcsB,MAAAA;AAAd,KAApB;AACD,GAHD,CAnDiC,CAwDjC;;;AACA,MAAI5B,eAAJ,EAAqB,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAG,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CAArB,KACK;AACH,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgB,KAAK,CAAC,CAAD,CAAL,CACEC,IADF,CACO,IADP,EAEEwB,GAFF,CAEM,CAACF,EAAD,EAAKX,EAAL,KAAY;AACf,0BACE;AACE,QAAA,GAAG,EAAEA,EADP;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,OAAO,EAAE,MAAMY,WAAW,CAACZ,EAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD,KATF,CADH,CADF,CADF;AAgBD;AACF","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport \"./GamePage.scss\";\n\n// query string\nimport qs from \"qs\";\n// socket.io client\nconst io = require(\"socket.io-client\");\nconst socket = io(\"http://localhost:5000\");\n\nexport default function GamePage() {\n  // state\n  const [room, setRoom] = useState(\"\");\n  const [errorJoinedRoom, setErrorJoinedRoom] = useState(false);\n  const [waitSecondPlayer, setWaitSecondPlayer] = useState(false);\n  const [socketID, setSocketID] = useState(null);\n  const [mark, setMark] = useState(\"O\");\n  const [opponent, setOpponent] = useState([]);\n  const [end, setEnd] = useState(false);\n  const [gameState, setGameState] = useState([]);\n  const [board, setBoard] = useState(new Array(9).fill(null));\n\n  useEffect(() => {\n    console.log(\"NEW\");\n    //get current room and name\n    const { room, name } = qs.parse(window.location.search, {\n      ignoreQueryPrefix: true,\n    });\n    setRoom(room);\n    socket.emit(\"joinedNewRoom\", { room, name });\n\n    // asigning id and mark\n    socket.on(\"assignID\", ({ id, playerMark }) => {\n      console.log(id, playerMark);\n      setMark(playerMark);\n      setSocketID(id);\n    });\n\n    // creating game (board, players ...)\n    socket.on(\"startTheGame\", ({ stateOfTheGame, players }) => {\n      setWaitSecondPlayer(false);\n      startGame(stateOfTheGame, players);\n    });\n\n    socket.on(\"updateBoard\", ({ stateOfTheGame, turn }) =>\n      handleUpdateGame(stateOfTheGame, turn)\n    );\n  }, []);\n\n  const handleUpdateGame = (state, turn) => {\n    setBoard(state);\n    setTurn(turn);\n  };\n\n  // assigning board state and players data\n  const startGame = (state, players) => {\n    const player2 = players.filter((el) => el.id !== socketID)[0][1];\n    setOpponent([player2, 0]);\n    setBoard(state);\n  };\n\n  const handleClick = (id) => {\n    console.log(mark);\n    socket.emit(\"move\", { room, mark, id });\n  };\n\n  // Render\n  if (errorJoinedRoom) return <Redirect to={`/`} />;\n  else {\n    return (\n      <div className=\"container-board\">\n        <div className=\"board\">\n          {Array(9)\n            .fill(null)\n            .map((el, id) => {\n              return (\n                <button\n                  key={id}\n                  className=\"cell\"\n                  onClick={() => handleClick(id)}></button>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}