{"ast":null,"code":"var _jsxFileName = \"/home/dima/Desktop/Projects/tic-tac-toe/client/src/components/StartPage/StartPage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\"; // Components\n\nimport MenuChoise from \"../MenuChoise/MenuChoise\";\nimport InputForm from \"../InputForm/InputForm\"; // socket.io client\n\nconst io = require(\"socket.io-client\");\n\nconst socket = io(\"http://localhost:5000\");\nexport default function StartPage() {\n  const [isSelectedMenu, setIsSelectedMenu] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [newGame, setNewGame] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [serverLoaded, setServerLoaded] = useState(false);\n  useEffect(() => {\n    setLoading(false);\n    socket.on(\"newGameHasCreated\", room => {\n      // Set room ID\n      setRoom(room);\n      setServerLoaded(true);\n    });\n    socket.on(\"joinedCreatedRoomSuccessfuly\", room => {\n      serverLoaded(true);\n    }); // when user disconected - close session\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const validateInputName = () => {\n    return newGame ? name.trim() !== \"\" : name.trim() !== \"\" && room.trim() !== \"\";\n  };\n\n  const handleSelect = isNewGame => {\n    setIsSelectedMenu(true);\n    isNewGame ? setNewGame(true) : setNewGame(false);\n  };\n\n  const handleInput = e => {\n    setName(e.target.value);\n  };\n\n  const handleInputRoom = e => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validateInputName()) {\n      newGame ? socket.emit(\"createNewGame\") : socket.emit(\"joinCreatedRoom\", {\n        room\n      });\n    }\n  }; // Render\n\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  } else if (serverLoaded) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: `/game?room=${room}&name=${name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }\n    });\n  } else if (isSelectedMenu) {\n    return /*#__PURE__*/React.createElement(InputForm, {\n      setIsSelectedMenu: setIsSelectedMenu,\n      onSubmit: handleSubmit,\n      onInput: handleInput,\n      onInputRoom: handleInputRoom,\n      newGame: newGame,\n      name: name,\n      room: room,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"start-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MenuChoise, {\n      onSelect: handleSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["/home/dima/Desktop/Projects/tic-tac-toe/client/src/components/StartPage/StartPage.js"],"names":["React","useEffect","useState","Redirect","MenuChoise","InputForm","io","require","socket","StartPage","isSelectedMenu","setIsSelectedMenu","name","setName","room","setRoom","newGame","setNewGame","loading","setLoading","serverLoaded","setServerLoaded","on","disconnect","validateInputName","trim","handleSelect","isNewGame","handleInput","e","target","value","handleInputRoom","handleSubmit","preventDefault","emit"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Components\nimport MenuChoise from \"../MenuChoise/MenuChoise\";\nimport InputForm from \"../InputForm/InputForm\";\n\n// socket.io client\nconst io = require(\"socket.io-client\");\nconst socket = io(\"http://localhost:5000\");\n\nexport default function StartPage() {\n  const [isSelectedMenu, setIsSelectedMenu] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [newGame, setNewGame] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [serverLoaded, setServerLoaded] = useState(false);\n\n  useEffect(() => {\n    setLoading(false);\n\n    socket.on(\"newGameHasCreated\", (room) => {\n      // Set room ID\n      setRoom(room);\n      setServerLoaded(true);\n    });\n\n    socket.on(\"joinedCreatedRoomSuccessfuly\", (room) => {\n      serverLoaded(true);\n    });\n    // when user disconected - close session\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  const validateInputName = () => {\n    return newGame\n      ? name.trim() !== \"\"\n      : name.trim() !== \"\" && room.trim() !== \"\";\n  };\n\n  const handleSelect = (isNewGame) => {\n    setIsSelectedMenu(true);\n    isNewGame ? setNewGame(true) : setNewGame(false);\n  };\n\n  const handleInput = (e) => {\n    setName(e.target.value);\n  };\n  const handleInputRoom = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (validateInputName()) {\n      newGame\n        ? socket.emit(\"createNewGame\")\n        : socket.emit(\"joinCreatedRoom\", { room });\n    }\n  };\n\n  // Render\n  if (loading) {\n    return <h1>Loading...</h1>;\n  } else if (serverLoaded) {\n    return <Redirect to={`/game?room=${room}&name=${name}`} />;\n  } else if (isSelectedMenu) {\n    return (\n      <InputForm\n        setIsSelectedMenu={setIsSelectedMenu}\n        onSubmit={handleSubmit}\n        onInput={handleInput}\n        onInputRoom={handleInputRoom}\n        newGame={newGame}\n        name={name}\n        room={room}\n      />\n    );\n  } else {\n    return (\n      <div className=\"start-container\">\n        <MenuChoise onSelect={handleSelect} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}